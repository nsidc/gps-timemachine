version: 2
jobs:
  build:
    working_directory: ~/gps-timemachine
    docker:
      - image: continuumio/miniconda3:4.3.14
    steps:
      - checkout
      - run:
          name: Configure Conda
          command: .circleci/configure_conda.sh
      - run:
          name: Build Package
          command: invoke build.build --python-version 3.6
      - store_artifacts:        # Only needed if you want to get them from the circleci interface
          path: /opt/conda/conda-bld/linux-64/
          destination: ~/gps-timemachine/artifacts
      - persist_to_workspace:
          root: /opt
          paths:
            - conda/conda-bld


  publish-to-dev:
    working_directory: ~/gps-timemachine
    docker:
      - image: continuumio/miniconda3:4.3.14
    steps:
      - checkout
      - attach_workspace:
          at: /opt
      - run:
          name: Configure Conda
          command: .circleci/configure_conda.sh
      - run:
          name: Publish to anaconda.org dev channel
          command: |
            invoke deploy.assert_new_package gps-timemachine
            invoke clean.remove_dev_packages --package=gps-timemachine --token=$ANACONDA_TOKEN
            for ARTIFACT in $(ls /opt/conda/conda-bld/linux-64/*.tar.bz2) ; do
                invoke deploy.anaconda dev $ANACONDA_TOKEN ${ARTIFACT}
            done

  publish-to-main:
    working_directory: ~/gps-timemachine
    docker:
      - image: continuumio/miniconda3:4.3.14
    steps:
      - checkout
      - attach_workspace:
          at: /opt
      - run:
          name: Configure Conda
          command: .circleci/configure_conda.sh
      - run:
          name: publish to anaconda.org main channel
          command: |
            invoke clean.remove_dev_packages --package=gps-timemachine --token=$ANACONDA_TOKEN
            for ARTIFACT in $(ls /opt/conda/conda-bld/linux-64/*.tar.bz2) ; do
                invoke deploy.anaconda main $ANACONDA_TOKEN {ARTIFACT}
            done


workflows:
  version: 2
  build-and-deploy-some:

    jobs:
      - build:
          filters:
            tags:
               only: /.*/

      - publish-to-dev:
          requires:
            - build
          filters:
            branches:
              only: /^master$/
          context: org-global

      - publish-to-main:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          context: org-global
